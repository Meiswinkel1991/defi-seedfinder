{
  "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_DFITokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_dSeedTokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "SeedFinderTrove__NotEnoughAllowance",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "TokenSwap",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "getDFITokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDSeedTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLockedDFITokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "swapDFITokenToSeedToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "swapSeedTokenToDFIToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x7b88393a46baf73c93b3a5df0c75481cb09bd5b96b57fe81d212eaa119740620",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
    "transactionIndex": 0,
    "gasUsed": "550460",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0xc16b9dfc3c6559935a87dfef134eb0dae2fa188b40bf002a35e49828a0627e59",
    "transactionHash": "0x7b88393a46baf73c93b3a5df0c75481cb09bd5b96b57fe81d212eaa119740620",
    "logs": [],
    "blockNumber": 3,
    "cumulativeGasUsed": "550460",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512"
  ],
  "numDeployments": 1,
  "solcInputHash": "09aac56770bd735585dc8df8dd29d484",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_DFITokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_dSeedTokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"SeedFinderTrove__NotEnoughAllowance\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"TokenSwap\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getDFITokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDSeedTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLockedDFITokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"swapDFITokenToSeedToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"swapSeedTokenToDFIToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SeedFinderTrove.sol\":\"SeedFinderTrove\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"contracts/SeedFinderTrove.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"./interfaces/ISeedToken.sol\\\";\\n\\nerror SeedFinderTrove__NotEnoughAllowance();\\n\\ncontract SeedFinderTrove {\\n    /* === State Variables ====== */\\n\\n    ISeedToken private seedToken;\\n    IERC20 private DFIToken;\\n\\n    uint256 private lockedDFIToken;\\n\\n    /* ====== Events ====== */\\n\\n    event TokenSwap(address _from, address _to, uint256 _amount);\\n\\n    /* ====== Main Functions ====== */\\n\\n    constructor(address _DFITokenAddress, address _dSeedTokenAddress) {\\n        DFIToken = IERC20(_DFITokenAddress);\\n        seedToken = ISeedToken(_dSeedTokenAddress);\\n    }\\n\\n    function swapDFITokenToSeedToken(uint256 _amount) external {\\n        uint256 _allowance = DFIToken.allowance(msg.sender, address(this));\\n\\n        if (_allowance < _amount) {\\n            revert SeedFinderTrove__NotEnoughAllowance();\\n        }\\n\\n        require(DFIToken.transferFrom(msg.sender, address(this), _amount));\\n\\n        seedToken.mint(msg.sender, _amount);\\n\\n        emit TokenSwap(address(DFIToken), address(seedToken), _amount);\\n    }\\n\\n    function swapSeedTokenToDFIToken(uint256 _amount) external {\\n        seedToken.burn(msg.sender, _amount);\\n\\n        require(DFIToken.transfer(msg.sender, _amount));\\n\\n        emit TokenSwap(address(seedToken), address(DFIToken), _amount);\\n    }\\n\\n    /* ====== Internal Functions ====== */\\n\\n    /* ====== Pure / View Functions ======*/\\n\\n    function getDFITokenAddress() external view returns (address) {\\n        return address(DFIToken);\\n    }\\n\\n    function getDSeedTokenAddress() external view returns (address) {\\n        return address(seedToken);\\n    }\\n\\n    function getLockedDFITokens() external view returns (uint256) {\\n        return lockedDFIToken;\\n    }\\n}\\n\",\"keccak256\":\"0x6b83a491b0910772633da4723b7217486e8a99df4c3e45a6993202a5f7395f3b\",\"license\":\"MIT\"},\"contracts/interfaces/ISeedToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.9;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\n\\r\\ninterface ISeedToken is IERC20 {\\r\\n    function mint(address to, uint256 amount) external;\\r\\n\\r\\n    function burn(address _account, uint256 _amount) external;\\r\\n}\\r\\n\",\"keccak256\":\"0xf6414b9500bf7158dccd7490b995059cd806f3e447facb53b338f2d408f1299e\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516109833803806109838339818101604052810190610032919061011d565b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505061015d565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ea826100bf565b9050919050565b6100fa816100df565b811461010557600080fd5b50565b600081519050610117816100f1565b92915050565b60008060408385031215610134576101336100ba565b5b600061014285828601610108565b925050602061015385828601610108565b9150509250929050565b6108178061016c6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806326ee85911461005c57806346c2b8681461007a578063841c0ec914610096578063ab1935ae146100b4578063db38c738146100d2575b600080fd5b6100646100ee565b6040516100719190610604565b60405180910390f35b610094600480360381019061008f919061065a565b610117565b005b61009e6102dc565b6040516100ab9190610696565b60405180910390f35b6100bc6102e6565b6040516100c99190610604565b60405180910390f35b6100ec60048036038101906100e7919061065a565b610310565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639dc29fac33836040518363ffffffff1660e01b81526004016101729291906106b1565b600060405180830381600087803b15801561018c57600080fd5b505af11580156101a0573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016102019291906106b1565b602060405180830381600087803b15801561021b57600080fd5b505af115801561022f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102539190610712565b61025c57600080fd5b7f9d3e64e0b9bc617a229c24a7aa25ef6c9c775a1998f32e31dde4da03c467dc0e60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040516102d19392919061073f565b60405180910390a150565b6000600254905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b815260040161036f929190610776565b60206040518083038186803b15801561038757600080fd5b505afa15801561039b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103bf91906107b4565b9050818110156103fb576040517f77e28ae000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161045a9392919061073f565b602060405180830381600087803b15801561047457600080fd5b505af1158015610488573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ac9190610712565b6104b557600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933846040518363ffffffff1660e01b81526004016105109291906106b1565b600060405180830381600087803b15801561052a57600080fd5b505af115801561053e573d6000803e3d6000fd5b505050507f9d3e64e0b9bc617a229c24a7aa25ef6c9c775a1998f32e31dde4da03c467dc0e600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040516105b79392919061073f565b60405180910390a15050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105ee826105c3565b9050919050565b6105fe816105e3565b82525050565b600060208201905061061960008301846105f5565b92915050565b600080fd5b6000819050919050565b61063781610624565b811461064257600080fd5b50565b6000813590506106548161062e565b92915050565b6000602082840312156106705761066f61061f565b5b600061067e84828501610645565b91505092915050565b61069081610624565b82525050565b60006020820190506106ab6000830184610687565b92915050565b60006040820190506106c660008301856105f5565b6106d36020830184610687565b9392505050565b60008115159050919050565b6106ef816106da565b81146106fa57600080fd5b50565b60008151905061070c816106e6565b92915050565b6000602082840312156107285761072761061f565b5b6000610736848285016106fd565b91505092915050565b600060608201905061075460008301866105f5565b61076160208301856105f5565b61076e6040830184610687565b949350505050565b600060408201905061078b60008301856105f5565b61079860208301846105f5565b9392505050565b6000815190506107ae8161062e565b92915050565b6000602082840312156107ca576107c961061f565b5b60006107d88482850161079f565b9150509291505056fea26469706673582212206abadbb493eb0f5166d2c6071bdfc5e35bd72041d6763fa8582af0e637cff4ec64736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c806326ee85911461005c57806346c2b8681461007a578063841c0ec914610096578063ab1935ae146100b4578063db38c738146100d2575b600080fd5b6100646100ee565b6040516100719190610604565b60405180910390f35b610094600480360381019061008f919061065a565b610117565b005b61009e6102dc565b6040516100ab9190610696565b60405180910390f35b6100bc6102e6565b6040516100c99190610604565b60405180910390f35b6100ec60048036038101906100e7919061065a565b610310565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639dc29fac33836040518363ffffffff1660e01b81526004016101729291906106b1565b600060405180830381600087803b15801561018c57600080fd5b505af11580156101a0573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016102019291906106b1565b602060405180830381600087803b15801561021b57600080fd5b505af115801561022f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102539190610712565b61025c57600080fd5b7f9d3e64e0b9bc617a229c24a7aa25ef6c9c775a1998f32e31dde4da03c467dc0e60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040516102d19392919061073f565b60405180910390a150565b6000600254905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b815260040161036f929190610776565b60206040518083038186803b15801561038757600080fd5b505afa15801561039b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103bf91906107b4565b9050818110156103fb576040517f77e28ae000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161045a9392919061073f565b602060405180830381600087803b15801561047457600080fd5b505af1158015610488573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ac9190610712565b6104b557600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933846040518363ffffffff1660e01b81526004016105109291906106b1565b600060405180830381600087803b15801561052a57600080fd5b505af115801561053e573d6000803e3d6000fd5b505050507f9d3e64e0b9bc617a229c24a7aa25ef6c9c775a1998f32e31dde4da03c467dc0e600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040516105b79392919061073f565b60405180910390a15050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105ee826105c3565b9050919050565b6105fe816105e3565b82525050565b600060208201905061061960008301846105f5565b92915050565b600080fd5b6000819050919050565b61063781610624565b811461064257600080fd5b50565b6000813590506106548161062e565b92915050565b6000602082840312156106705761066f61061f565b5b600061067e84828501610645565b91505092915050565b61069081610624565b82525050565b60006020820190506106ab6000830184610687565b92915050565b60006040820190506106c660008301856105f5565b6106d36020830184610687565b9392505050565b60008115159050919050565b6106ef816106da565b81146106fa57600080fd5b50565b60008151905061070c816106e6565b92915050565b6000602082840312156107285761072761061f565b5b6000610736848285016106fd565b91505092915050565b600060608201905061075460008301866105f5565b61076160208301856105f5565b61076e6040830184610687565b949350505050565b600060408201905061078b60008301856105f5565b61079860208301846105f5565b9392505050565b6000815190506107ae8161062e565b92915050565b6000602082840312156107ca576107c961061f565b5b60006107d88482850161079f565b9150509291505056fea26469706673582212206abadbb493eb0f5166d2c6071bdfc5e35bd72041d6763fa8582af0e637cff4ec64736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 2670,
        "contract": "contracts/SeedFinderTrove.sol:SeedFinderTrove",
        "label": "seedToken",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(ISeedToken)2848"
      },
      {
        "astId": 2673,
        "contract": "contracts/SeedFinderTrove.sol:SeedFinderTrove",
        "label": "DFIToken",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20)777"
      },
      {
        "astId": 2675,
        "contract": "contracts/SeedFinderTrove.sol:SeedFinderTrove",
        "label": "lockedDFIToken",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_contract(IERC20)777": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_contract(ISeedToken)2848": {
        "encoding": "inplace",
        "label": "contract ISeedToken",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}